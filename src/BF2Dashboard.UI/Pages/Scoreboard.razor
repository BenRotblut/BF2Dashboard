@using BF2Dashboard.Domain.BattlefieldApi
@using BF2Dashboard.Domain.Services
@inject ServerCachingService _serverCachingService

    <table class="table table-hover">
        <thead>
        <tr>
            <th scope="col">@TeamLabelFilter Player</th>
            <th scope="col">Score</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var player in ResolvePlayers())
        {
            <tr>
                <td>
                    <a title="Open BF2Hub profile" class="link-light text-nowrap text-decoration-none" target="_blank"
                       href="https://www.bf2hub.com/player/@player.Name">
                        <span>@player.Tag @player.Name</span>
                    </a>
                </td>
                <td>
                    @player.Score
                </td>
            </tr>
        }
        </tbody>
    </table>

@code
{
    [Parameter]
    public string? SelectedServerId { get; set; }

    [Parameter]
    public string? TeamLabelFilter { get; set; }

    private List<Player> ResolvePlayers()
    {
        if (string.IsNullOrWhiteSpace(SelectedServerId))
            return new List<Player>();
        
        var server = _serverCachingService.GetFromCache(SelectedServerId);
        if (server == null)
            return new List<Player>();

        var result = server.Players
            .Where(p => p.IsHuman)
            .Where(p => p.TeamLabel == TeamLabelFilter)
            .OrderByDescending(p => p.Score)
            .ToList();

        return result;
    }
}