@using BF2Dashboard.Domain.BattlefieldApi

@* <MudToggleIconButton Icon="@Icons.Material.Filled.AlarmOff" Color="@Color.Error" Title="Off" *@
@*                      ToggledIcon="@Icons.Material.Filled.AlarmOn" ToggledColor="@Color.Success" ToggledTitle="On" *@
@*                      ToggledChanged="DoSomething"/> *@

@* <button value="Add to favorites" class="btn btn-link display-block" type="button" @onclick="async () => await TogglePinStatus()">Add to favorites</button> *@

<i class="bi @(Server.IsPinned ? "bi-heart-fill" : "bi-heart")" style="font-size: 20pt" @onclick="async () => await TogglePinStatus()">
</i>

@code {
    
    [Parameter]
    public Server Server { get; set; } = default!;

    [Parameter]
    public EventCallback<Server> OnServerPinToggleEventCallback { get; set; }

    private async Task TogglePinStatus()
    {
        var newStatus = !Server.IsPinned;
        Console.WriteLine($"Setting pin status to {newStatus} of server: {Server.Name} {Server.Guid}");
        Server.IsPinned = newStatus;
        await OnServerPinToggleEventCallback.InvokeAsync(Server);
    }

}